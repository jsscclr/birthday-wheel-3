{"version":3,"sources":["Components/quiz/quiz.module.css","Components/BirthdayMessage/birthdayMessage.module.css","Components/log-in/styles.module.css","Components/wheel-canvas/styles.module.css","Components/app/styles.module.css","Components/send-gift/styles.module.css","Images/birthdayCake.gif","Images/birthdayBalloon.gif","Components/BirthdayMessage/BirthdayMessage.tsx","Components/quiz/index.tsx","Components/wheel-canvas/index.tsx","Components/log-in/index.tsx","Components/send-gift/index.tsx","Components/app/index.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","BirthdayMessage","name","continueShowChoices","React","useState","index","setIndex","showButton","setShowButton","texts","useEffect","intervalId","setTimeout","clearTimeout","className","styles","root","rootFlex","src","birthdayCake","gifContainter","alt","birthdayMessage","text","length","springConfig","presets","gentle","birthdayBalloon","buttons","onClick","button","href","QuizItem","img","points","onSelect","onDeselect","unavailable","selected","setSelected","handleClick","useCallback","prev","classnames","quizItem","halftone","item","overlay","split","items","Quiz","continueShowMessage","onPrizeChange","setPoints","counter","setCounter","prize","useMemo","console","log","handleSelect","handleDeselect","map","key","continueButton","visible","WheelCanvas","segments","segColors","winningSegment","onFinished","onConfirmed","primaryColor","contrastColor","buttonText","isOnlyOnce","size","upDuration","downDuration","fontFamily","isFinished","setFinished","setPrize","currentSegment","currentSegmentIndex","isStarted","timerHandle","angleCurrent","angleDelta","canvasContext","maxSpeed","Math","PI","upTime","downTime","spinStart","frames","centerX","centerY","colorPickerRef","createRef","wheelInit","window","scrollTo","initCanvas","wheelDraw","canvas","document","getElementById","navigator","appVersion","indexOf","createElement","setAttribute","appendChild","addEventListener","spin","current","getContext","Date","getTime","setInterval","onTimerTick","draw","duration","progress","finished","sin","clearInterval","clear","drawWheel","drawNeedle","drawSegment","lastAngle","angle","ctx","value","save","beginPath","moveTo","arc","lineTo","closePath","picked","fillStyle","fill","stroke","translate","rotate","font","fillText","substr","restore","len","PI2","lineWidth","strokeStyle","textBaseline","textAlign","i","fileStyle","change","floor","clearRect","id","ref","width","height","style","pointerEvents","confirm","LogIn","setName","nameInput","setNameInput","fadeOut","setFadeOut","fadeout","onSubmit","event","preventDefault","input","type","onChange","element","currentTarget","target","SendGift","prizes","App","showWheel","setShowWheel","showChoices","setShowChoices","wheelSpinned","setWheelSpinned","confirmGift","setConfirmGift","removePrize","app","winner","run","tweenDuration","onConfettiComplete","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7ddd1dce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"quiz_root__3xUsE\",\"quizItem\":\"quiz_quizItem__1nQ6y\",\"halftone\":\"quiz_halftone__3H4Mo\",\"item\":\"quiz_item__PVnUQ\",\"move\":\"quiz_move__1Rqlu\",\"selected\":\"quiz_selected__3T8qL\",\"overlay\":\"quiz_overlay__3998n\",\"movetext\":\"quiz_movetext__1tKL8\",\"continueButton\":\"quiz_continueButton__1jhAq\",\"visible\":\"quiz_visible__lCj2f\",\"unavailable\":\"quiz_unavailable__3-03X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootFlex\":\"birthdayMessage_rootFlex__2GpWj\",\"root\":\"birthdayMessage_root__RLw6f\",\"gifContainter\":\"birthdayMessage_gifContainter__tKjtw\",\"birthdayMessage\":\"birthdayMessage_birthdayMessage__5ykq0\",\"button\":\"birthdayMessage_button__gQxER\",\"fadeIn\":\"birthdayMessage_fadeIn__2vGvA\",\"link\":\"birthdayMessage_link__3Vnob\",\"buttons\":\"birthdayMessage_buttons__2SPY7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__1JV0w\",\"fadeout\":\"styles_fadeout__3XxcL\",\"input\":\"styles_input__3EKS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2r9w7\",\"confirm\":\"styles_confirm__3R4Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"styles_App__3uLb5\",\"logo\":\"styles_logo__If_d5\",\"logo-spin\":\"styles_logo-spin__3qO2F\",\"header\":\"styles_header__3hgED\",\"link\":\"styles_link__2oLNu\",\"container\":\"styles_container__12dSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"styles_root__2gqMK\",\"fadeIn\":\"styles_fadeIn__2jkZi\"};","export default __webpack_public_path__ + \"static/media/birthdayCake.5004c9cb.gif\";","export default __webpack_public_path__ + \"static/media/birthdayBalloon.e7e58333.gif\";","import React, { useEffect, useState } from 'react';\nimport styles from './birthdayMessage.module.css';\nimport birthdayCake from '../../Images/birthdayCake.gif';\nimport birthdayBalloon from '../../Images/birthdayBalloon.gif';\nimport TextTransition, { presets } from 'react-text-transition';\n\ntype Props = {\n  name: string;\n  continueShowChoices: () => void;\n};\n\nexport const BirthdayMessage = ({ name, continueShowChoices }: Props) => {\n  const [index, setIndex] = React.useState(0);\n  const [showButton, setShowButton] = useState(false);\n  const texts = [`Happy birthday ${name}!`, 'are you ready to spin the birthday wheel?'];\n\n  useEffect(() => {\n    const intervalId = setTimeout(\n      () => {\n        setIndex((index) => index + 1);\n        setShowButton(true);\n      },\n      1500, // after 1.5 seconds\n    );\n\n    return () => {\n      clearTimeout(intervalId);\n    };\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.rootFlex}>\n        <img src={birthdayCake} className={styles.gifContainter} alt=\"birthday cake...\" />\n        <h1 className={styles.birthdayMessage}>\n          <TextTransition text={texts[index % texts.length]} springConfig={presets.gentle} />\n        </h1>\n        {/* <h1 className={styles.birthdayMessage}>Happy birthday {name} !</h1> */}\n        <img src={birthdayBalloon} className={styles.gifContainter} alt=\"birthday balloon\" />\n      </div>\n      {showButton && (\n        <div className={styles.buttons}>\n          <button onClick={continueShowChoices} className={styles.button}>\n            yes\n          </button>\n          <a href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\" className={styles.button}>\n            no\n          </a>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { useCallback, useEffect, useState, useMemo } from 'react';\nimport styles from './quiz.module.css';\nimport classnames from 'classnames';\n\nconst QuizItem = ({\n  img,\n  points,\n  onSelect,\n  onDeselect,\n  unavailable,\n}: {\n  img: string;\n  points: number;\n  onSelect(points: number): void;\n  onDeselect(points: number): void;\n  unavailable: boolean;\n}) => {\n  const [selected, setSelected] = useState(false);\n\n  const handleClick = useCallback(() => {\n    selected ? onDeselect(points) : onSelect(points);\n\n    setSelected((prev) => !prev);\n  }, [onSelect, onDeselect, selected]);\n\n  return (\n    <div\n      className={classnames(styles.quizItem, {\n        [styles.selected]: selected,\n        [styles.unavailable]: unavailable && !selected,\n      })}\n      onClick={handleClick}\n    >\n      <img src=\"halftone.png\" className={styles.halftone} />\n      <img src={img} className={styles.item} />\n      {selected ? (\n        <div className={styles.overlay}>\n          <span>{img.split('.')[0]}</span>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nconst items = [\n  { img: 'armchair.webp', points: 1 },\n  { img: 'donut.webp', points: 3 },\n  { img: 'grapes.webp', points: 5 },\n  { img: 'flowers.webp', points: 4 },\n  { img: 'light-bulb.webp', points: 1 },\n  { img: 'sushi.webp', points: 4 },\n  { img: 'mango.webp', points: 3 },\n  { img: 'popcorn.webp', points: 2 },\n  { img: 'tv.webp', points: 2 },\n  { img: 'cheese.webp', points: 5 },\n];\n\n// 2 points => Book\n// 3 - 5 points => Uber eats\n// 6 - 7 points => Messina\n// 8 points => Provider\n// 9 - 14 points => Wine\ntype Props = {\n  continueShowMessage: () => void;\n  onPrizeChange: (prize: string) => void;\n};\n\nexport const Quiz = ({ continueShowMessage, onPrizeChange }: Props) => {\n  const [points, setPoints] = useState(0);\n  const [counter, setCounter] = useState(0);\n  const prize = useMemo(() => {\n    if (points === 2) {\n      return 'Book';\n    }\n\n    if (points > 2 && points < 6) {\n      return 'Uber Eats';\n    }\n\n    if (points > 5 && points < 8) {\n      return 'Messina';\n    }\n\n    if (points === 8) {\n      return 'Provider';\n    }\n\n    if (points > 8) {\n      return 'Wine';\n    }\n\n    return '';\n  }, [points]);\n\n  useEffect(() => {\n    if (counter === 2) {\n      console.log(prize);\n      onPrizeChange(prize);\n    }\n  }, [counter, prize]);\n\n  const handleSelect = useCallback((points: number) => {\n    setCounter((prev) => prev + 1);\n    setPoints((prev) => prev + points);\n  }, []);\n\n  const handleDeselect = useCallback((points: number) => {\n    setCounter((prev) => prev - 1);\n    setPoints((prev) => prev - points);\n  }, []);\n\n  return (\n    <div className={styles.root}>\n      <h1>first, we need you to select 2 things here that speak to you...</h1>\n      {items.map((item) => (\n        <QuizItem\n          {...item}\n          key={item.img}\n          onSelect={handleSelect}\n          onDeselect={handleDeselect}\n          unavailable={counter === 2}\n        />\n      ))}\n      <button\n        onClick={continueShowMessage}\n        className={classnames(styles.continueButton, { [styles.visible]: counter === 2 })}\n      >\n        Continue\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport styles from './styles.module.css';\n// import { Button } from 'react-bootstrap';\n\nexport type WheelProps = {\n  segments: prizeItem[];\n  segColors: string[];\n  winningSegment: string;\n  onFinished: (msg: string, index: number) => void;\n  onConfirmed: () => void;\n  primaryColor: string;\n  contrastColor: string;\n  buttonText: string;\n  isOnlyOnce: boolean;\n  size: number;\n  upDuration: number;\n  downDuration: number;\n  fontFamily: string;\n};\n\nexport type prizeItem = {\n  value: string;\n  picked: boolean;\n};\n\nexport const WheelCanvas: React.FC<WheelProps> = ({\n  segments,\n  segColors,\n  winningSegment,\n  onFinished,\n  onConfirmed,\n  primaryColor,\n  contrastColor,\n  buttonText,\n  isOnlyOnce = true,\n  size = 290,\n  upDuration = 1000,\n  downDuration = 1000,\n  fontFamily = 'Gatwick Bold',\n}) => {\n  const [isFinished, setFinished] = useState(false);\n  const [prize, setPrize] = useState<string>('');\n\n  let currentSegment = '';\n  let currentSegmentIndex = 0;\n  let isStarted = false;\n  let timerHandle: any = 0;\n  const timerDelay: number = segments.length;\n  let angleCurrent = 0;\n  let angleDelta = 0;\n  let canvasContext: any = null;\n  let maxSpeed = Math.PI / segments.length;\n  const upTime: number = segments.length * upDuration;\n  const downTime = segments.length * downDuration;\n  let spinStart = 0;\n  let frames = 0;\n  const centerX = 300;\n  const centerY = 300;\n  let colorPickerRef = React.createRef<HTMLCanvasElement>();\n\n  useEffect(() => {\n    wheelInit();\n\n    setTimeout(() => {\n      window.scrollTo(0, 1);\n    }, 0);\n  }, []);\n\n  const wheelInit = () => {\n    initCanvas();\n    wheelDraw();\n  };\n\n  const initCanvas = () => {\n    let canvas = document.getElementById('canvas');\n\n    if (navigator.appVersion.indexOf('MSIE') !== -1) {\n      canvas = document.createElement('canvas');\n      canvas.setAttribute('width', '1000');\n      canvas.setAttribute('height', '600');\n      canvas.setAttribute('id', 'canvas');\n      document.getElementById('wheel')?.appendChild(canvas);\n    }\n\n    canvas?.addEventListener('click', spin, false);\n    // canvasContext = canvas.getContext('2d')\n\n    if (colorPickerRef.current) {\n      canvasContext = colorPickerRef.current.getContext('2d');\n    }\n  };\n\n  const spin = () => {\n    isStarted = true;\n\n    if (timerHandle === 0) {\n      spinStart = new Date().getTime();\n      // maxSpeed = Math.PI / ((segments.length*2) + Math.random())\n      maxSpeed = Math.PI / segments.length;\n      frames = 0;\n      // timerHandle = setInterval(onTimerTick, timerDelay);\n      timerHandle = setInterval(onTimerTick, segments.length);\n    }\n  };\n\n  const onTimerTick = () => {\n    frames++;\n    draw();\n\n    const duration = new Date().getTime() - spinStart;\n    let progress = 0;\n    let finished = false;\n\n    if (duration < upTime) {\n      progress = duration / upTime;\n      angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2);\n    } else {\n      if (winningSegment) {\n        console.log(currentSegment);\n\n        if (currentSegment === winningSegment && frames > segments.length) {\n          console.log(currentSegment);\n          progress = duration / upTime;\n          angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n          progress = 1;\n        } else {\n          progress = duration / downTime;\n          angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n        }\n      } else {\n        progress = duration / downTime;\n        angleDelta = maxSpeed * Math.sin((progress * Math.PI) / 2 + Math.PI / 2);\n      }\n\n      if (progress >= 1) {\n        finished = true;\n      }\n    }\n\n    angleCurrent += angleDelta;\n\n    while (angleCurrent >= Math.PI * 2) {\n      angleCurrent -= Math.PI * 2;\n    }\n\n    if (finished) {\n      // const ctx = canvasContext;\n      // ctx.fillStyle = segColors[2]\n      // let lastAngle = angleCurrent\n      // darkenSegment(currentSegmentIndex, lastAngle);\n      draw();\n      setFinished(true);\n      onFinished(currentSegment, currentSegmentIndex);\n      clearInterval(timerHandle);\n      timerHandle = 0;\n      angleDelta = 0;\n      setPrize(currentSegment);\n    }\n  };\n\n  /*\n  const darkenSegment = (key: number, lastAngle: number) => {\n    const ctx = canvasContext;\n    const value = segments[key].value;\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.lineTo(centerX, centerY);\n    ctx.closePath();\n    if (segments[key].picked) {\n      ctx.fillStyle = segColors[2];\n    } else {\n      ctx.fillStyle = segColors[key % 2];\n    }\n    ctx.fill();\n    ctx.stroke();\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.fillStyle = contrastColor || 'white';\n    ctx.font = 'bold 1em ' + fontFamily;\n    ctx.fillText(value.substr(0, 21), size / 2 + 20, 0);\n    // ctx.fillText(\"hi\", 2, 0);\n    ctx.restore();\n  };\n  */\n\n  const wheelDraw = () => {\n    clear();\n    drawWheel();\n    drawNeedle();\n  };\n\n  const draw = () => {\n    clear();\n    drawWheel();\n    drawNeedle();\n  };\n\n  const drawSegment = (key: number, lastAngle: number, angle: number) => {\n    const ctx = canvasContext;\n    const value = segments[key].value;\n    ctx.save();\n    ctx.beginPath();\n    ctx.moveTo(centerX, centerY);\n    ctx.arc(centerX, centerY, size, lastAngle, angle, false);\n    ctx.lineTo(centerX, centerY);\n    ctx.closePath();\n    if (segments[key].picked) {\n      ctx.fillStyle = segColors[2];\n    } else {\n      ctx.fillStyle = segColors[key % 2];\n    }\n    ctx.fill();\n    ctx.stroke();\n    ctx.save();\n    ctx.translate(centerX, centerY);\n    ctx.rotate((lastAngle + angle) / 2);\n    ctx.fillStyle = contrastColor || 'white';\n    ctx.font = 'bold 1em ' + fontFamily;\n    ctx.fillText(value.substr(0, 21), size / 2 + 20, 0);\n    // ctx.fillText(\"hi\", 2, 0);\n    ctx.restore();\n  };\n\n  const drawWheel = () => {\n    const ctx = canvasContext;\n    let lastAngle = angleCurrent;\n    const len = segments.length;\n    const PI2 = Math.PI * 2;\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = primaryColor || 'black';\n    ctx.textBaseline = 'middle';\n    ctx.textAlign = 'center';\n    ctx.font = '1em ' + fontFamily;\n    for (let i = 1; i <= len; i++) {\n      const angle = PI2 * (i / len) + angleCurrent;\n      drawSegment(i - 1, lastAngle, angle);\n      lastAngle = angle;\n    }\n\n    // Draw a center circle\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, 50, 0, PI2, false);\n    ctx.closePath();\n    ctx.fillStyle = primaryColor || 'black';\n    ctx.lineWidth = 10;\n    ctx.strokeStyle = contrastColor || 'white';\n    ctx.fill();\n    ctx.font = 'bold 1em ' + fontFamily;\n    ctx.fillStyle = contrastColor || 'white';\n    ctx.textAlign = 'center';\n    ctx.fillText(buttonText || 'Spin', centerX, centerY + 3);\n    ctx.stroke();\n\n    // Draw outer circle\n    ctx.beginPath();\n    ctx.arc(centerX, centerY, size, 0, PI2, false);\n    ctx.closePath();\n\n    ctx.lineWidth = 10;\n    ctx.strokeStyle = primaryColor || 'black';\n    ctx.stroke();\n  };\n  /*\n    let lastAngle = angleCurrent\n    const len = segments.length\n    const PI2 = Math.PI * 2\n    ctx.lineWidth = 1\n    ctx.strokeStyle = primaryColor || 'black'\n    ctx.textBaseline = 'middle'\n    ctx.textAlign = 'center'\n    ctx.font = '1em ' + fontFamily\n    for (let i = 1; i <= len; i++) {\n      const angle = PI2 * (i / len) + angleCurrent\n      drawSegment(i - 1, lastAngle, angle)\n*/\n  const drawNeedle = () => {\n    const ctx = canvasContext;\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = contrastColor || 'white';\n    ctx.fileStyle = contrastColor || 'white';\n    ctx.beginPath();\n    ctx.moveTo(centerX + 20, centerY - 50);\n    ctx.lineTo(centerX - 20, centerY - 50);\n    ctx.lineTo(centerX, centerY - 70);\n    ctx.closePath();\n    ctx.fill();\n    const change = angleCurrent + Math.PI / 2;\n    let i = segments.length - Math.floor((change / (Math.PI * 2)) * segments.length) - 1;\n    if (i < 0) i = i + segments.length;\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = primaryColor || 'black';\n    ctx.font = 'bold 1.5em ' + fontFamily;\n    currentSegment = segments[i].value;\n    currentSegmentIndex = i;\n    isStarted && ctx.fillText(currentSegment, centerX + 10, centerY + size + 50);\n  };\n\n  const clear = () => {\n    const ctx = canvasContext;\n    ctx.clearRect(0, 0, 1000, 800);\n  };\n\n  return (\n    <div id=\"wheel\" className={styles.root}>\n      {prize === '' ? <h1>Spin the wheel!</h1> : <h1>You won a very special: {prize}</h1>}\n      <canvas\n        ref={colorPickerRef}\n        id=\"canvas\"\n        width=\"600\"\n        height=\"600\"\n        style={{\n          pointerEvents: isFinished && isOnlyOnce ? 'none' : 'auto',\n        }}\n      />\n      {isFinished && (\n        <button className={styles.confirm} onClick={onConfirmed}>\n          Confirm\n        </button>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport styles from './styles.module.css';\n\ntype Props = {\n  setName: (name: string) => void;\n};\n\nexport const LogIn = ({ setName }: Props) => {\n  const [nameInput, setNameInput] = useState<string>('');\n  const [fadeOut, setFadeOut] = useState<boolean>(false);\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setName(nameInput);\n    setFadeOut(true);\n  };\n\n  const handleChange = (event: React.FormEvent) => {\n    const element = event.currentTarget as HTMLInputElement;\n    setNameInput(element.value);\n  };\n  return (\n    <div className={fadeOut ? styles.fadeout : styles.root}>\n      <h1>Who are you?</h1>\n      <form onSubmit={handleSubmit}>\n        <label>Enter your name: </label>\n        <input className={styles.input} type=\"text\" value={nameInput} onChange={handleChange} />\n      </form>\n      <a href=\"https://canva.okta.com/login/login.htm\" target=\"_blank\">\n        {' '}\n        or Log In with Okta\n      </a>\n    </div>\n  );\n};\n","import styles from './styles.module.css';\n// import mail from '../../Images/mail.gif';\n\nexport const SendGift = () => (\n  <div className={styles.root}>\n    <h1>yay! your prize will be sent to you shortly</h1>\n    <img src=\"https://raw.githubusercontent.com/liviaw/birthday-wheel-3/main/src/Images/mail.gif\" />\n  </div>\n);\n","import { useState } from 'react';\nimport { BirthdayMessage } from '../BirthdayMessage/BirthdayMessage';\nimport { Quiz } from '../quiz';\nimport styles from './styles.module.css';\nimport type { prizeItem } from '../wheel-canvas';\nimport { WheelCanvas } from '../wheel-canvas';\nimport Confetti from 'react-confetti';\nimport { LogIn } from '../log-in';\nimport { SendGift } from '../send-gift';\n\nconst prizes: prizeItem[] = [\n  {\n    value: 'Book',\n    picked: false,\n  },\n  {\n    value: 'Uber Eats',\n    picked: false,\n  },\n  {\n    value: 'Messina',\n    picked: false,\n  },\n  {\n    value: 'Provider',\n    picked: false,\n  },\n  {\n    value: 'Wine',\n    picked: false,\n  },\n];\n\n// #E7ED6E, #C674DE, #DC5F43\n\nconst segColors = ['#BE8FFA', '#E2CFFA', '#4F445D', '#E7ED6E'];\n\nexport const App = () => {\n  const [prize, setPrize] = useState<string>('');\n  const [showWheel, setShowWheel] = useState(false);\n  const [showChoices, setShowChoices] = useState(false);\n  const [wheelSpinned, setWheelSpinned] = useState(false);\n  const [name, setName] = useState('');\n  const [confirmGift, setConfirmGift] = useState(false);\n  const continueShowChoices = () => {\n    setShowChoices(true);\n  };\n  const onFinished = (winner: string, index: number) => {\n    removePrize(index);\n    setWheelSpinned(true);\n  };\n\n  const removePrize = (index: number) => {\n    prizes[index].picked = true;\n  };\n\n  const continueShowWheel = () => {\n    setShowWheel(true);\n  };\n\n  const continueConfirmGift = () => {\n    setConfirmGift(true);\n  };\n\n  return (\n    <div className={styles.app}>\n      {!showChoices && <LogIn setName={setName} />}\n      {name !== '' && !showChoices && (\n        <BirthdayMessage name={name} continueShowChoices={continueShowChoices} />\n      )}\n      {showChoices && !showWheel && (\n        <Quiz continueShowMessage={continueShowWheel} onPrizeChange={setPrize} />\n      )}\n      {showWheel && (\n        <WheelCanvas\n          segments={prizes}\n          segColors={segColors}\n          winningSegment={prize}\n          onFinished={(winner: string, index: number) => onFinished(winner, index)}\n          onConfirmed={continueConfirmGift}\n          primaryColor=\"black\"\n          contrastColor=\"white\"\n          buttonText=\"Spin\"\n          isOnlyOnce={false}\n          size={290}\n          upDuration={100}\n          downDuration={1000}\n          fontFamily=\"Gatwick Bold\"\n        />\n      )}\n      <Confetti\n        run={wheelSpinned}\n        tweenDuration={100}\n        onConfettiComplete={() => {\n          setWheelSpinned(false);\n        }}\n      />\n      {confirmGift && <SendGift />}\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './Components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}